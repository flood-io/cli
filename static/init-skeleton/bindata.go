package initskeleton

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _package_lock_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8d\x51\x4f\xfa\x30\x14\x47\xdf\xf9\x14\x4b\x5f\xff\xff\xb5\x03\x99\x08\x09\x89\x46\x12\x8d\x21\xa0\x44\x50\x1f\x61\xbd\x74\x65\x5d\x6f\x69\x3b\x74\x18\xbe\xbb\x69\x4d\x50\x1f\x9a\x26\xe7\x77\x73\xce\x67\x27\x49\x88\x5e\xd7\x40\x46\x09\xd9\x2a\x44\x9e\x16\xa5\xc5\x1a\x52\x0f\xce\x93\xff\x61\x3e\x80\x75\x12\x75\xb8\xe8\xd2\x8c\x66\xdf\x54\x61\x51\x6d\xa5\x82\xd5\x79\xed\x46\x6e\x61\xdf\x48\x0b\x8e\x8c\x12\x6f\x1b\x88\x8c\x83\x01\xcd\x41\x17\x32\xf2\x10\x4d\x12\x72\xed\x5b\x03\x8e\x69\xe4\x70\x86\x7f\x73\x43\xda\xa7\x79\xcc\xc5\xc5\x82\x43\x75\x00\x1e\xa6\xd2\x7b\xe3\x46\x8c\x59\x10\xd2\x79\xdb\x52\x6d\xea\x9d\xa3\x68\x05\xfb\xe5\x65\x69\xfc\xd2\x28\xa2\x5e\x1c\x7f\x64\x52\x7b\x10\x56\xfa\x36\xd8\x5c\xb9\xce\xbb\xbd\x74\x72\xb8\x1d\x6c\x8e\xf3\x7c\x30\x1c\x6c\xaa\x1b\x23\x9a\xea\x03\x9b\xfb\xba\x9a\xf3\xb7\x59\x6f\x92\xb5\xd3\x1c\xd5\x7b\xb6\xd0\xc5\xc4\xbc\x2e\xd7\x97\xfa\x62\xb8\x7f\x5e\xb9\xa5\x64\xb9\xe8\x3d\x3d\xec\x1e\x85\xba\xda\xeb\xfe\xb1\xfc\xd7\x2f\x33\x87\xdb\x19\xbe\xdc\x4d\x17\x62\x3c\x26\x31\x7a\xea\x84\x77\xea\x7c\x05\x00\x00\xff\xff\xdc\xa1\x2a\xfd\x74\x01\x00\x00")

func package_lock_json() ([]byte, error) {
	return bindata_read(
		_package_lock_json,
		"package-lock.json",
	)
}

var _package_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\x41\x6f\xea\x30\x10\x84\xef\xf9\x15\x96\xcf\x2f\x26\xe1\x3d\x84\xc8\xe9\xa9\x94\x43\x25\x84\x5a\xd1\xaa\xb7\x4a\x26\x59\xc2\x52\x7b\x1d\xd9\x0e\xa5\xaa\xf8\xef\x95\x9d\x44\x40\xae\xf3\xcd\xce\xec\xfc\x24\x8c\x71\x92\x1a\x78\xc1\xf8\x5e\x19\x53\xa5\xe5\xc1\x1a\x0d\xa9\x07\xe7\xf9\x9f\x80\x4f\x60\x1d\x1a\x0a\x8e\x5c\x64\x22\xeb\x54\x2d\x31\x4a\x48\x15\x9c\xc5\xd1\x75\xaa\xc2\x12\xc8\xc5\xb4\xb7\xcd\xfa\x69\xb9\xda\x6c\x57\x8f\x1d\xaa\xa0\x01\xaa\x80\x4a\x04\xc7\x0b\x16\x9a\x19\xe3\xff\x63\xe9\xa4\x2b\x0d\x67\x1f\x99\xc8\x45\x3e\x8f\x37\x81\xfb\xef\x06\xdc\x84\x4c\xd5\xd1\x85\xf8\x27\x66\x03\x6c\x2c\x78\x8f\x60\x23\xc9\x45\x9e\x89\xe9\x80\xbc\x53\x48\x3e\x82\x99\x58\x88\xfc\x5e\x4f\x4b\x43\x7b\xac\xd3\x51\xc0\xbc\x1f\x77\xf5\x35\xaa\xad\x91\xc6\xbe\xbf\x37\xbe\xf0\x5e\x69\xb1\x89\x5d\x53\x31\xe7\x09\x63\x97\x38\xf8\xe6\xa8\x1f\xeb\x40\x23\x2f\xd8\x5e\x2a\x07\xfd\xbd\x43\xaa\x15\xbc\xb4\xc6\x87\x7d\xde\xb6\x03\xf0\x56\xa2\x42\xaa\x97\x46\x6b\x19\xb2\xa5\x52\xd7\xdd\x48\xfe\x1d\x2b\x7f\xe0\x05\xcb\xb3\xac\x97\x5b\x07\xaf\x72\xe7\x46\x39\x72\x37\x38\xa7\xbd\xb4\xb3\xb2\xfc\x04\xbf\x6d\x64\x89\x54\xdf\xdb\x8f\xee\xfc\xd0\x63\xa9\x61\x8d\x34\x7a\x4b\x5a\x6b\xbe\x9e\xa5\x05\x72\xf1\xa9\x93\xc1\x2a\x4e\x4e\x2e\xc9\x6f\x00\x00\x00\xff\xff\x60\xac\x2e\x8f\x4d\x02\x00\x00")

func package_json() ([]byte, error) {
	return bindata_read(
		_package_json,
		"package.json",
	)
}

var _test_ts = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\x41\x6f\xdb\x30\x0c\x85\xcf\xd6\xaf\xe0\x4e\x72\x0c\xc5\x6e\x07\xec\x22\xa0\xc3\xd6\xe6\xd8\x0d\xc3\xba\xee\xce\xca\x4c\x2a\x40\x91\x02\x91\x4e\x17\x18\xfa\xef\x83\x5c\xf7\x90\xa3\x9e\x1e\xc9\xf7\x3d\x7f\x3c\xa5\x2c\x30\x03\x0b\x9d\x0c\xfc\x21\x96\x27\x12\xf1\xf1\xc0\x06\x9e\xa3\xf8\x60\xe0\xfe\x62\xe0\x47\x9a\x98\xee\x27\x91\x14\xd9\xc0\x8e\xce\xde\x91\x81\x5d\xf6\x67\xca\x50\x60\x9f\xd3\x11\xf4\xb7\x7d\x48\x69\x1c\xdc\x6b\x4e\x47\xd2\x6a\xdd\xdd\x01\x32\x20\x33\x65\x59\x7d\xef\x0f\xad\xe8\xdf\x62\x70\x29\xb2\x00\xaf\x67\xed\x55\x08\xb8\x83\x59\x35\x21\xa5\xd3\x43\x9a\xa2\x58\xd8\xde\x1a\xd5\x8c\xcb\x7d\xbb\xe6\xe8\xfd\x2f\x1c\x1f\x31\x8e\xec\xf0\x44\x46\x35\x13\x53\xfe\x7e\xa0\x6a\xd7\x4b\xa4\xed\x7b\xa4\xad\x10\x8b\x36\xaa\x19\x06\x70\x81\x30\x3f\xa0\x7b\x25\x0b\x92\xa7\x3a\x36\x7a\xc6\x97\x40\xd7\x22\x3a\xf1\x29\xee\x28\xe0\xc5\xc2\x4d\xff\xc5\xa8\xa6\x56\xb5\x0a\x9f\xab\x50\x94\x1a\xba\x4e\x41\x07\xf3\xdc\xff\xc4\x23\x95\x52\x1f\x7f\x29\xb3\x4f\xd1\xc2\x6d\x7f\xa3\xa0\x1b\x3e\x70\x47\xda\xe3\x14\x04\xda\x0d\xdc\x7d\xad\x74\x75\x5f\xab\x2b\xb5\x85\x27\xc1\x2c\xda\x00\xf2\x25\x3a\x68\x5f\x72\x7a\x63\xca\x76\x6d\xfa\x63\xa2\xc1\x37\xf4\x02\xeb\x6f\x7f\xf6\xec\xa5\xd5\xf3\xdc\x3f\xff\x7e\x2c\x45\x6f\x54\xb5\x2c\x25\xb7\x0b\x06\x68\x97\xe2\x21\xa3\x4c\x01\x2b\x0e\x7f\xd2\x1b\xd5\x94\x8d\x2a\xea\x7f\x00\x00\x00\xff\xff\x7a\x39\x32\xe2\x01\x02\x00\x00")

func test_ts() ([]byte, error) {
	return bindata_read(
		_test_ts,
		"test.ts",
	)
}

var _tsconfig_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\xcd\x6a\xe3\x30\x10\xc7\xef\x7e\x0a\xa1\x63\x08\xce\xee\x1e\x36\xe0\x53\x4b\xda\x43\x4a\x69\x4b\x42\x4e\x25\x14\x45\x9e\x34\x4a\x47\x1a\x23\x8d\x48\x4d\xc9\xbb\x17\xf9\x83\xc6\x6e\x8e\xf3\xfb\x7f\x48\xd6\xf8\x2b\x13\x42\x6a\xb2\x95\x41\xf0\xcf\x15\x1b\x72\x41\x16\x22\x61\x21\xa4\xa5\x32\x22\xc8\xa2\xb1\x58\x72\xc7\x20\xa7\xad\xc2\xca\xbf\x03\x27\xe5\x7e\xfd\xef\xcf\xdf\x79\xcf\xdb\xc4\x0a\x02\x61\x4c\x65\xc9\xe1\xa8\x84\x5e\x47\xb3\x93\x85\x78\x6d\x06\x21\x64\x49\xb6\x53\xda\x21\x37\x0c\x5e\xed\x10\x7e\x28\x84\xf9\xe5\x70\x71\x58\x3f\xff\xcf\x95\xf7\xaa\xce\x8d\xd3\x18\x4b\x18\xbb\x73\xda\x1d\x41\xb3\x6c\xe8\xb6\xbb\x47\xe5\x81\xb9\x96\x85\x60\x1f\xa1\x63\x81\xbd\xd1\xfc\x14\x11\x17\x07\xd0\x1f\xe9\x1d\xf6\x0a\x43\x2f\x2b\x44\x3a\x6d\x9c\x07\xa5\x0f\xe9\x8a\x8b\xf4\x59\x63\xcb\x49\xd5\x61\xdd\xf4\x0c\xbb\x1d\x6d\x5c\x0c\x50\x3e\x92\x56\x38\x6e\xee\xc5\x17\xe5\x95\x05\x06\x7f\xf5\xe8\x87\x30\xac\xd4\xe9\x92\x63\xe8\x68\x69\x2b\x34\xda\xf0\xad\xab\xaf\xb5\xac\x6b\xc7\x07\x60\xa3\xef\x60\xaf\x22\xf2\xd2\x56\xe4\x79\xd4\xc2\x75\x05\xe1\x72\x4f\x37\x0d\x99\x35\x9b\x1c\xbc\x63\xe2\x2b\x22\x1e\xb8\x93\xed\xad\xfd\x13\xc2\xac\x8d\x76\xa9\x4c\x88\x73\x4a\x4a\xf8\x6c\x77\xd5\xa7\x06\x19\x39\xfd\xcd\x66\x93\x49\xea\xd8\x66\xe7\xec\x3b\x00\x00\xff\xff\x1f\x2a\xd1\xd7\xb4\x02\x00\x00")

func tsconfig_json() ([]byte, error) {
	return bindata_read(
		_tsconfig_json,
		"tsconfig.json",
	)
}

var _tslint_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x4a\xad\x28\x49\xcd\x4b\x29\x56\xb2\x52\x88\x56\x2a\x29\xce\xc9\xcc\x2b\xd1\x4d\xce\xcf\x4b\xcb\x4c\xd7\x2d\x28\x4a\x2d\x29\xc9\x4c\x2d\x52\x8a\xe5\xaa\xe5\x02\x04\x00\x00\xff\xff\xef\x81\xf7\x5a\x2c\x00\x00\x00")

func tslint_json() ([]byte, error) {
	return bindata_read(
		_tslint_json,
		"tslint.json",
	)
}

var _yarn_lock = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x5a\x4d\xd3\x22\x39\x72\xbe\xf3\x2b\x08\xe6\x3a\x05\x52\xa6\x52\x1f\x7b\x62\xc2\xd3\xb6\x3b\x62\x63\x26\x62\xb7\x7d\xf0\xa5\x23\x52\x4a\xe9\x6d\xb6\x79\x81\x00\xba\xbd\xed\x83\x7f\xbb\x43\xaa\xe2\x1b\xd6\x2e\x7b\x4e\xa8\x04\x3c\x3c\x99\x52\x66\x3e\x4a\xf1\xd3\xf4\xd3\xbf\x7e\xfc\xeb\xf4\xe3\x5f\xa7\xbf\xfc\x36\xfd\xe5\xdf\x3e\xfd\xfe\x2f\x1f\x7e\xfb\xf0\x97\x5f\x3e\x7d\xf8\x75\xfa\xcf\x1f\xff\xfc\x61\x3e\xfd\xf5\xf7\xe9\x6f\xbf\x7f\x9a\x7e\xf8\xf5\xe3\xa7\xfe\xa3\x75\x7a\xfa\xeb\xc7\xbf\x7c\xf8\xa7\x4f\x7f\xfe\xf7\xf9\xe4\xa7\xe9\x0f\xde\x6f\xa6\xeb\x6d\xfa\x5a\x56\xeb\x3c\xfd\xae\x27\x93\xc9\x6c\x59\xd6\xdb\xad\x2c\xd2\x97\xfd\xf6\x3d\x2f\x3f\xab\xb9\x9e\x6b\x37\xfb\xd3\x64\x3a\xfd\x9e\xf7\x87\xd5\x76\x33\x9d\x0d\x73\x93\xe9\x74\x9f\x0f\xdb\xf5\xf7\x2c\xd3\xd9\x97\xe3\x71\x77\xf8\xd3\x62\xb1\xcf\x6f\xab\xc3\x71\xff\x63\x5e\xb1\x77\x5f\xdf\xe6\x69\xfb\xbe\xb8\xc1\x5c\x74\xc3\xa0\xeb\x71\xe6\xc7\xb7\xff\xfc\x49\xc7\x12\x82\x71\x3a\x04\xa5\x40\xfb\xc0\x49\x82\x04\x9d\x04\x41\x48\xc5\xa0\x14\xba\xec\x72\xa9\x3f\x2a\x79\x97\x37\x92\x37\x69\x95\x0f\x95\xd7\x74\x7a\xfc\xb1\xcb\x87\xb4\x5f\xed\x8e\xd3\xd9\x67\x98\xdb\xb9\x9e\x55\x4b\xda\xf4\x62\xb3\x95\xbc\xfc\x1c\xe6\x66\x4e\xb7\x66\xf4\x53\x23\xac\xb8\xe0\x2d\xba\xf6\xd2\x35\x88\x66\x80\x00\x07\x95\x2c\x1a\x50\x5e\x3b\x14\x1d\x35\x2b\xb6\x91\x43\xd1\x52\x50\xb2\x85\x2c\xa9\xd0\x6c\x32\xe1\xcd\x61\xd5\xed\xf3\x5b\xfe\xfb\xf2\x33\xcc\xd5\x5c\xdd\xb0\x82\xea\x94\x11\xac\x2e\x68\x8b\xee\xea\xa1\x6b\x38\x8d\x5a\xc2\x88\xc8\x91\x72\x46\xab\xc4\xdb\xac\xb2\x05\x5f\x94\xb1\x9e\xab\x4f\xc1\x89\x25\x23\xe5\x44\xed\x70\xfc\xb1\xce\x87\xca\x0d\xe6\xfa\x8e\x1b\x8c\xe7\xd6\xc3\x9d\xc8\xf5\x4f\x5d\x43\x6a\xec\xa2\x41\x10\x41\x24\x1f\x2d\x9a\x54\x1c\x65\x9d\x8d\xb5\x06\xad\x07\xa3\x08\x31\x69\x91\x98\xef\xd9\xe1\x1c\xee\x3c\xd7\x66\xfe\x10\x76\x0d\xa9\xf7\x9d\xa6\x10\xbd\x50\xcc\xaa\x84\x4c\x6c\x0b\x1a\x2b\x1c\x83\x29\xda\xa6\xac\x00\xb4\xd5\xd1\xfb\xe7\xfb\x32\x6d\xd7\xdb\x7d\x97\xb6\x9b\xef\x79\x5f\xb7\xa6\x9e\x87\xca\x70\xc2\xfb\xb7\x1d\xef\x0f\x79\xf9\x59\xcf\xd5\xdc\xdd\x58\x51\x67\xc2\x18\x2b\x06\xac\x6a\xc2\x30\xec\x1a\x46\xe3\xef\x50\x3c\xc6\x04\x16\x8b\xb7\x39\xb8\xe2\x53\x32\xc5\x46\xce\x3a\xaa\x1c\x14\x3b\x01\x48\xde\x3e\xe7\x7f\xd8\xed\x57\x9b\x63\xe9\xfe\x76\x98\xce\xfe\xab\x82\xc2\x6c\x32\x89\x1c\xf3\xba\x4b\x75\xfb\x97\x3d\xd7\x1c\x61\xe7\x70\xbf\x16\x76\x0e\x76\xd4\x62\xdc\xa3\x2e\xba\x87\xa9\xae\x07\x6d\x76\x59\x2c\x62\xb0\x38\x49\x3a\x63\x8c\x2e\x65\xa4\x60\x9c\x44\x5f\x32\xda\xc0\x58\xc8\x27\x67\xe2\x8b\x75\xf9\xc2\xeb\xaf\x6d\x3d\xf4\x1c\x67\x6d\x2a\x1f\xbe\x1d\x57\xeb\x43\xcb\x1f\xcd\xce\x3a\xf9\xb7\x43\x77\xdc\x7e\xcd\x9b\x3a\x8d\x67\xf3\xd7\xbc\x49\x59\xba\x77\x3e\xa6\x2f\xfd\x0a\xaa\x87\x15\x1c\x67\xfa\x35\x62\x33\xfc\x7a\xa2\xad\x66\x6f\xb5\x0f\xd1\x88\x0e\x81\x23\xc4\x9c\x4d\x90\xac\xad\xc9\xac\x20\xfa\x90\xb2\xb1\x20\x4e\x47\x67\x5d\xa5\xb9\xe7\x94\xbb\xfc\xf7\x5d\xdd\xd7\xdb\xcd\xb2\xd9\x7a\xbf\xd3\xf4\x5c\x8f\x09\xe7\x3b\xcc\xca\xf4\x76\xa6\xeb\x21\x1b\x57\x4c\xae\xa4\x58\x08\x82\x78\x07\x60\x0b\x0a\x14\x82\x18\xac\x2d\x85\xc0\xe9\x1c\x8d\xd1\x22\xcf\x57\xe8\xd6\x05\x6d\xa9\x06\xa7\xd6\xa8\xda\x24\x3e\x76\xef\xbc\xab\xa5\x48\xb5\x64\x1f\xbf\xad\xd6\xc7\xd5\xa6\x7b\xdf\xca\xb7\x96\x1e\x1a\x93\x47\x73\xc7\x58\x7b\x0b\x59\xad\xbd\x9d\xe9\xad\x6d\xc6\x82\x53\x45\x39\x9b\x88\x1d\x24\x05\x85\xa2\x25\x36\x4e\x4a\x30\x89\x4a\x46\x06\xe7\x7d\x80\x9a\x62\xdb\xde\xeb\xf9\xe1\x03\x3f\x1c\xc1\xaf\x01\xb5\x62\xca\xeb\xaf\x8d\x0b\x36\x2e\xec\xb5\xa6\x44\x94\x0d\x3b\x05\x25\x1b\xd1\xa4\x38\x0a\x7a\x07\x1e\x80\x5d\x56\xa1\xa4\xf0\x22\x65\x5d\xa5\xc1\x16\x0b\x43\xc2\xaf\x01\x92\x78\x97\xbb\xc3\x71\xbf\xda\xbc\xf5\x35\x66\x37\xac\xcb\x10\x2d\x5f\xf8\xd0\xd5\xaf\x0f\x31\x34\xac\x56\xfd\xc2\xee\x34\x8f\x57\xf3\xdf\x76\xbb\xed\xfe\x78\xe8\x5a\x92\xbc\x7c\xe7\xe4\x20\x98\xe3\x43\x65\xc4\x51\x0b\x78\xeb\xa0\xf6\xed\xe6\x20\x02\x2c\x19\xac\xf3\x9c\x93\x8b\xca\x64\xaf\x8c\x0e\x2a\x40\x80\x92\x7d\xd4\x4e\x51\x88\x2e\xbc\xc8\x89\xb7\x0e\x3a\xd7\x9c\x7f\xe8\x20\x7a\x61\x32\xf5\xdf\x9e\xdc\xd4\x89\x65\x5f\x26\xee\xf6\x46\x18\x67\xfa\x35\x60\x75\xc1\xf5\x73\xd7\xd0\x86\xf2\x06\x56\x6b\xe5\x38\x47\x28\x10\x4c\x8e\xa5\xe4\x14\xb2\x84\x9c\x58\x08\x02\x5b\x15\x5c\x7e\x11\xa4\x3d\xea\x86\xdf\xf3\x90\x4b\xf5\xd9\x96\x4d\x2b\x0c\xcf\x83\x70\xd4\x26\x3f\xa3\x9d\xad\xa8\x0f\xd7\xdb\xdd\x89\x22\xf2\x51\x7c\x48\x06\x8a\x0b\x24\x62\x00\xc1\x17\x67\x94\x47\x9d\x98\x6a\x01\xa4\x46\xed\xfd\x9d\x37\x92\xf7\x75\x77\xe9\x47\x71\xa3\xcd\x48\x27\x0f\x70\x8d\xda\x30\xee\x7a\x98\x3e\x2b\x00\x92\x06\xcc\xe8\xb8\xf8\xc4\x98\x2c\x49\x31\x14\x15\x58\x89\x82\xe4\xa2\xd2\x31\x30\x37\x6a\xa7\x9c\xb6\x6c\x29\xed\x4e\x6f\xab\x91\xc4\x4e\x60\x8d\xd9\xe9\xa1\x6b\x38\xbd\x5a\xf5\x1c\x6c\x14\xe7\x8a\x58\x2f\xc5\xb9\x80\xec\x50\xa1\x65\x8c\xac\x84\x8c\x22\x31\xce\xc5\xd9\x64\x22\xab\x52\x9e\xab\x2d\x33\xaa\xca\x55\x9c\x45\xd7\x5e\xba\xf6\xdd\x5e\xfd\x69\xf1\x44\xca\x09\x17\x0c\xd6\x78\xf0\x92\xc9\x44\x74\xa2\xc4\x61\x64\xeb\x44\x98\x6c\x9a\x4d\x26\xcf\xe2\xab\x2f\xbf\xf0\xf3\xd3\xe0\xeb\xdf\xa4\x87\xda\x3c\x46\xf3\x3f\xc3\x5d\x74\x4f\xa7\x5b\x9d\xa6\xe1\x34\x63\x75\x52\x64\x41\x07\xc5\x5e\x4a\xb1\x5c\x55\x0a\xa4\xa2\x40\xa9\xc4\x1a\x55\xf4\x56\x4c\xb3\x6a\xbd\xda\x1c\xbb\xdd\xfa\xdb\xdb\x6a\xd3\xed\xf6\xf9\x78\x5c\xf5\x1b\xf4\xde\xe1\xf5\x5c\x33\xc6\xe1\xcf\x91\x1b\xf9\x67\x6f\x74\x0d\xbf\x2f\xdd\x98\x4d\x06\xf0\x51\xa2\xb2\xda\x80\x28\x4c\x64\x55\xca\xca\xe4\x04\x58\x6c\x72\x75\x5d\xdc\xf3\xac\x50\xf8\x70\xec\xea\x32\x5f\x92\x42\xd3\x52\xb9\x4e\x6f\x53\xac\xe7\xcd\x9a\xee\x87\x8a\x3e\xc9\x55\x65\xbe\xf3\xf2\xb3\x79\x50\x52\x66\xa4\x92\x1a\xa0\x9a\x8d\x6d\xd4\x99\xb3\x76\x32\x26\x84\x2c\x92\x44\x6b\xad\xb2\x8a\xa0\x7d\xe4\x54\xa0\xb0\x2b\xae\x50\x28\x44\x89\xbd\xea\xd7\xa4\x69\xc1\xfe\x74\x06\x77\x8b\x30\x94\xbb\xff\x35\xa3\x06\xd5\x18\xb5\x51\xd7\x10\x1a\x23\xc5\xb1\x98\xa2\x13\x33\xc5\x14\x75\x71\x1c\xc4\x73\x4a\x56\x32\x9b\xc2\xcc\xca\x44\x4e\xa1\x06\xe1\xd9\xa7\xaf\x72\xea\x18\x4e\x67\xb0\x45\x77\x19\xb7\x8c\xda\xf3\x32\xd1\x42\x32\x10\x7d\x56\x28\x19\x8b\x37\xde\x58\x15\x2d\x06\xe5\x42\x00\x65\x03\x89\xd2\x54\x3d\x55\x0e\xf3\x7d\xe6\xf5\x8e\x8f\x7f\x88\x12\xbe\x82\xab\xdc\x2e\x4f\x57\x1a\x58\x93\x32\x2c\x40\x80\x9a\x7c\x62\x36\x4a\xa2\xa9\xfa\xca\xa5\xa8\xb4\xd1\x3a\x04\x53\xfd\x37\x9b\x4c\xde\xd6\xdb\xb8\xfc\xec\x1e\x1c\xe6\x46\x3a\xac\xe2\x2c\xba\xf6\xd2\xb9\xb3\x9b\x92\x0e\x29\x48\x09\xac\xc0\x3b\x05\x62\x9d\xb7\x1a\xd0\x1b\xb6\x44\x60\x94\x49\x16\xad\x68\x7a\x11\x25\x17\xe3\x6e\xd5\xed\x6a\x53\xd6\xab\xb7\x2f\xc7\x61\xd6\x9c\x66\xbf\xe4\xfd\xea\x78\x98\xce\x06\xb1\xf5\xbe\xda\xac\x4e\xda\x18\x2f\x9f\xdb\x6e\x52\x5f\x8c\xf1\x84\xd7\xdc\xb7\x3a\x74\x1c\x0f\xdb\xf5\xb7\x63\xbe\xfc\xda\xe4\x24\xd8\x9e\xb7\x21\xc6\x2d\xdd\x09\x6b\xd1\x9d\x87\x6d\xab\x0f\x19\xc5\x14\x52\x26\xa4\xac\x73\x92\x02\x51\x59\x13\xb8\x60\x2e\x60\xb2\xa1\x2c\x48\x46\x5b\x09\xfa\x1f\x48\xae\x96\x64\xaf\x64\x62\xfd\x95\xb2\xe6\xb7\x65\x2f\x2a\xef\x6a\xd3\x78\xf2\x15\x6b\x20\x5f\x87\x1d\x9e\xc9\x47\x12\x43\x46\x12\xd4\x93\x57\x06\x20\x1b\x42\x41\x63\x5d\x26\x56\xae\x60\x0c\x44\x91\x8b\xcc\x26\x93\xd3\xe2\xf5\xc1\x60\x1e\x82\xc1\x8e\x20\x75\xc2\x5a\x74\xe7\x61\x0b\x03\xdb\x07\x69\x88\x62\x11\xb5\x38\x51\x20\x2a\xa9\x10\x53\xd0\x8a\xb5\x72\x14\xd9\x6b\x4b\x91\xac\x94\xf0\xdc\xa3\x8f\xdb\xe4\x3f\xf6\xbc\xdb\xfd\x98\xce\x74\xb3\xa2\xdf\x6c\xcb\xc7\xdc\x37\x46\xbb\x9d\x60\x9a\x01\xfd\xb0\x6d\x09\x1c\x4e\xf0\x98\x20\x79\xcc\x28\x6c\x80\xa9\x9e\x9a\xc0\x58\xab\x00\x8c\x57\xc5\x80\xf2\x60\xb5\xe4\xd9\x64\x72\x53\x3a\x96\x43\xe5\xb8\xa5\xa6\x47\xf6\x7e\x6e\x20\x17\xdd\xed\x73\xd7\xc3\xf5\x87\x05\x4d\x10\x12\x46\x54\x42\x45\x34\x05\x61\xab\x12\xb8\x94\xb3\x24\x1d\xa8\x70\xf1\x62\x74\x4d\x86\xe7\x6e\x41\xbf\x25\xe1\x61\x4b\x8e\xc9\x39\x67\xb0\x4a\xee\x34\x6e\x9b\xb2\xcf\x3e\xc1\x5b\x2b\x05\x03\x69\x05\x1a\x55\x46\x5f\x5c\x09\xc1\xc6\x94\xa3\x25\x63\x10\x54\x48\x40\xb1\xe7\xf5\x83\xdf\xd7\x95\x95\x7b\x08\x14\x3d\x2e\x52\x06\xac\x9e\x54\x1d\x75\x3d\x44\xaf\x77\xb3\xf3\xc6\x68\x6b\x6c\x14\x63\x3d\xe4\x60\xb1\x00\x44\x9b\x03\x78\xc0\x84\x2a\x24\x0b\x92\x5e\x44\xf9\xd0\xbd\x1a\x12\x94\x3b\x9d\xaa\x5a\x21\x9f\xce\x3e\x0f\x62\x60\x72\xce\x7c\xbd\x9b\xcd\x83\x9b\xcd\x08\x7b\xce\x60\x8b\xee\x32\x6e\x6e\x36\xc3\xf2\x5b\x9b\xc1\x5b\x43\xae\x28\x44\x65\x95\x35\x31\x93\x09\x2e\x7b\x89\x51\x25\x14\x04\xe5\xf1\x45\x17\xe3\xb6\x3d\x32\x08\x22\x37\x9b\x4c\x6a\x00\x2e\xfb\xf8\xbb\x4b\x12\xe3\x54\x75\xc5\x59\x74\xed\xa5\xd3\x67\x55\x4d\x1e\xa3\x66\x76\x8e\x82\xd5\x62\xa2\xd6\xc8\x49\x3b\x09\x89\x54\xe4\x5c\x82\x88\xb3\x51\x5e\xa4\xdb\xeb\x54\x70\x5f\x3d\x5e\x55\xf9\x31\xc7\x93\x7b\xcc\x45\xf7\x30\xd5\x12\x5d\x7f\x54\xd1\xce\xc4\x00\xd6\x3b\x24\x42\x53\x4a\x4c\x8e\x53\xb6\xb1\x10\x32\x71\xc8\x3a\x52\xa2\x42\xe5\x44\xf6\xaa\xb1\xfa\xff\x93\xfe\x17\xb4\x13\xc1\x4b\x73\x95\x86\x16\x97\x66\x29\xde\xe9\xcc\x21\x89\x4d\xc1\xa0\x8e\x36\x33\x44\x71\x86\x55\x29\x8a\x28\x99\xd4\xfc\x78\x16\xf6\xba\xc6\x0b\xdc\x0b\xb8\x71\xc9\xe1\x4a\xcc\x9f\xe5\x7b\x0f\xd2\xbb\x8c\x8b\x47\xb2\xa2\xbd\x01\x70\x96\x43\x60\x8a\x54\xf3\x98\x07\x91\x90\x03\x0b\xa6\x14\x70\x36\x99\x0c\x3f\xd8\x6f\xc5\x7b\x56\x34\x6a\x2b\x0e\x1f\x5b\x74\xa7\x51\xd7\x10\x7a\x46\x45\x05\x4e\x29\xbb\x60\x53\x60\x67\x81\x5c\x28\xa8\x23\x24\x9d\x92\x49\x98\x44\x4a\x28\xf8\xa2\xe5\x72\x71\xfe\xa5\x9f\x32\x39\xe4\xf7\xef\xd5\x9f\xf4\x10\x43\x34\x92\x78\x8f\xb4\xe8\x86\x41\x47\x67\xda\x92\x4c\xac\xfb\xcd\x26\x0e\x12\xb4\x95\x9c\x49\x0c\x92\xb6\x45\xa9\x00\x91\x7c\x71\xd1\x73\x4d\xb2\x97\x56\xf9\xb2\xef\x94\x3f\xec\xbd\x31\xa5\xf3\x82\x56\x69\x9d\x1f\xda\xde\xeb\xcb\xa7\x32\xd9\x06\xb0\xc5\x5a\xf0\x81\x90\x4c\x41\xa9\xaa\x1c\x14\x5a\xc4\xe8\xc9\x41\x70\x19\xea\xc1\xf9\xd2\x81\x7b\xa5\x95\xc6\x44\xef\x05\xad\x52\x3b\x3f\xb4\x9c\xd9\x47\xac\x65\xf4\x54\xa2\xf7\x84\x12\x08\x84\x6a\x20\x88\xca\x9e\xb9\x04\x03\xce\x4b\xb2\x28\xe9\xc5\x5d\xde\x53\xb1\x77\xdb\x39\xfb\x23\xf4\xea\x2d\x62\x35\xe5\x66\xe2\x4a\xbb\x12\x92\x28\x43\x35\xe7\x58\xb4\x58\xd8\x28\xad\x9d\xf2\xc6\x42\x08\x81\x72\x90\x82\x60\x92\x7b\x42\x93\x1e\x0e\xf1\x34\x52\xa7\xfc\x4f\x34\xe9\x2c\x54\xa2\x12\x42\xc4\xa8\xb5\x37\x22\x68\xad\x4d\x31\x13\xb3\x8a\x86\x12\x71\xcd\x9a\xda\xb1\xe1\xe7\x5e\x3f\xc9\xde\x4b\x8f\x76\x72\x3c\xac\x57\xb1\x26\x06\x37\xd7\x3f\x4f\xcf\x4f\x7e\xae\x6e\x9e\xee\xcf\xa2\x61\x94\x7d\x0d\x68\xd1\xf5\xaf\xad\x31\xd9\x5b\x93\xd1\xb1\xb7\x45\xd8\xa7\x18\xb9\x00\xb2\x22\x57\x8c\xc3\x14\x8a\x91\x64\x4d\xa6\x92\x20\xfb\x81\xe7\xe6\xd8\xa5\xed\xa6\xac\xde\xba\xeb\x44\x7b\xaf\x76\xda\xcc\x48\x72\x8f\xc8\x03\xdb\xc7\x37\xba\x86\x3f\x1c\x52\xbd\x2f\x2e\x98\x64\xbd\xc5\xc8\xa8\x0d\xa8\xec\xa3\x16\x6d\x38\x07\x8d\x60\x95\x45\x5f\xcf\x86\x27\xfa\x0f\x0d\xa0\x67\xda\x00\xff\x2f\xf4\x1f\x1b\x40\xcf\xdf\xe8\x1a\x7e\x7f\x6b\x58\x35\xa4\xe8\x90\xd9\x79\xcb\x9e\x02\x29\xcd\x06\x4c\xd0\xd1\xf9\x44\x92\x41\xa1\x66\x7c\x11\xc1\xcf\xfb\x4b\xc3\x6d\xc2\x70\xdc\x68\xeb\xdd\xb2\xb9\x6b\x5d\xe3\x9e\x52\x8d\x98\x70\xb7\xa3\x68\x64\xeb\xbb\x47\xba\x58\x49\xe7\x66\xb7\x06\xa2\xe2\x1d\x63\x29\xe4\x72\x54\x51\x65\x5d\x54\xb6\x5a\xb1\x8f\xc6\x19\xaf\x4c\xad\x4e\xf9\xd5\x8d\xd4\xed\x6d\xe4\x74\x36\xdc\x7b\xf6\x06\xdd\xdd\x0d\xdd\xf6\xbe\x4e\xf7\x8d\x70\x39\x6f\x9d\x1b\xc6\x6d\x5a\x9f\xaf\x59\x86\xc6\xd9\xd5\xbd\xc2\xdb\x7a\x5b\x3d\xe5\xae\x5a\x69\xbd\xf4\x6e\x1f\x73\xa7\x8f\xbd\x68\x08\x0c\x5e\x1b\x0e\x7b\x43\xf3\xa0\x2f\x74\xed\x02\x02\x1f\x57\xc4\x5f\xa6\x2e\x77\xa2\x3d\xc3\xc9\xf1\xd2\x1a\x7b\xd2\x40\x87\x71\x37\x6c\xc7\x73\x73\xec\x78\x6e\x8e\xc1\xe9\x4a\x8d\x22\x60\x02\x8b\x80\x88\x4a\x65\x71\xc6\x40\x34\xa0\x9d\x27\x4a\x31\x39\x32\x2e\x41\xb0\x2f\xf2\xd9\xb5\x35\x8d\xf7\xf9\x1f\x22\x4b\x98\xbb\x9f\xaf\xfe\x31\xb2\xec\xff\x30\x72\x67\x89\x1b\x67\xc8\x19\xad\xda\x72\x7e\xe8\x1a\x4e\x9f\x9d\x23\x5a\x0f\x09\x92\x0b\x9a\x53\x50\xd9\x25\x0b\x5a\x45\xb0\xc6\x79\xf6\xc2\xca\x53\x42\x0a\xb3\xc9\xa4\x97\xdf\xcb\xfb\xbc\x3a\x4e\x21\xf6\x20\x8b\x6e\x18\x34\xe1\x00\x43\x37\x03\x0c\x8a\x2f\x98\x93\x66\x46\x2a\x1a\xad\xb1\x8a\x62\x52\xa2\x15\xda\x8c\x8a\xa3\x0d\x65\x36\xf9\xef\x00\x00\x00\xff\xff\x1a\xb3\x63\x90\x61\x24\x00\x00")

func yarn_lock() ([]byte, error) {
	return bindata_read(
		_yarn_lock,
		"yarn.lock",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"package-lock.json": package_lock_json,
	"package.json": package_json,
	"test.ts": test_ts,
	"tsconfig.json": tsconfig_json,
	"tslint.json": tslint_json,
	"yarn.lock": yarn_lock,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"package-lock.json": &_bintree_t{package_lock_json, map[string]*_bintree_t{
	}},
	"package.json": &_bintree_t{package_json, map[string]*_bintree_t{
	}},
	"test.ts": &_bintree_t{test_ts, map[string]*_bintree_t{
	}},
	"tsconfig.json": &_bintree_t{tsconfig_json, map[string]*_bintree_t{
	}},
	"tslint.json": &_bintree_t{tslint_json, map[string]*_bintree_t{
	}},
	"yarn.lock": &_bintree_t{yarn_lock, map[string]*_bintree_t{
	}},
}}
